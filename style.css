\
:root {
    /* Neue Farbpalette HLTV-Style */
    --bg-color: #1e1e24; /* Dunkles Grau/Blau */
    --card-bg-color-rgb: 38, 38, 46; /* RGB für Transparenz, dunkleres Grau */
    --card-bg-color: rgba(var(--card-bg-color-rgb), 0.75); /* Leicht transparent */
    --glass-blur: 8px;
    --glass-border-color: rgba(255, 255, 255, 0.1); /* Schwacher weißer Rand */
    --text-primary: #f0f0f5;    /* Helles Weiß/Grau */
    --text-secondary: #a0a0b0; /* Helleres Grau */
    --accent-orange: #ff5500; /* Faceit Orange für Highlights */
    --accent-blue: #4a90e2;   /* Blau für Akzente */
    --border-color: #353540; /* Dunklere Trennlinien */

    /* Farben für Indikatorbalken (HLTV-Stil: Grün/Gelb/Rot oder Grau Abstufungen) */
    --bar-color-good: #66bb6a; /* Grün */
    --bar-color-okay: #ffee58; /* Gelb */
    --bar-color-bad: #ef5350;  /* Rot */
    --bar-background: #404050; /* Dunkleres Grau für Hintergrund */

    --font-family: 'Roboto', sans-serif;
    --border-radius: 8px;
}

body {
    font-family: var(--font-family);
    background-color: var(--bg-color);
    color: var(--text-primary);
    margin: 0;
    line-height: 1.6;
    display: flex;
    flex-direction: column;
    min-height: 100vh;
    /* Simple gradient background for glassmorphism */
    background: linear-gradient(135deg, rgba(30,30,36,0.95) 0%, rgba(45,45,55,0.98) 100%);
    background-attachment: fixed; /* Keep gradient fixed */
}

header {
    background-color: rgba(var(--card-bg-color-rgb), 0.85);
    padding: 1rem 2rem;
    text-align: center;
    border-bottom: 1px solid var(--border-color);
    backdrop-filter: blur(var(--glass-blur));
    position: sticky;
    top: 0;
    z-index: 10;
    box-shadow: 0 2px 10px rgba(0,0,0,0.2);
}

header h1 { color: var(--accent-orange); font-weight: 700; margin: 0; }

main {
    padding: 2rem 1rem;
    max-width: 1200px;
    margin: 1rem auto 0 auto;
    flex-grow: 1;
    width: 100%;
    box-sizing: border-box;
}

#loading-indicator, #error-message {
    text-align: center;
    font-size: 1.1rem;
    padding: 1.5rem;
    color: var(--text-secondary);
    background-color: var(--card-bg-color);
    backdrop-filter: blur(var(--glass-blur));
    border-radius: var(--border-radius);
    margin: 1rem auto;
    max-width: 450px;
    border: 1px solid var(--glass-border-color);
    box-shadow: 0 4px 15px rgba(0,0,0,0.15);
}
#error-message { color: var(--bar-color-bad); font-weight: bold; }

/* --- Layout für Hauptbereich --- */
#main-content-area {
    display: flex;
    /* Start centered */
    justify-content: center;
    align-items: flex-start;
    gap: 2rem;
    /* Smooth transition for justify-content change */
    transition: justify-content 0.5s ease-in-out;
}

/* Zustand, wenn Detailkarte sichtbar ist */
#main-content-area.detail-visible {
    /* List left, Card right */
    justify-content: space-between;
}

#player-list-container {
    width: 100%;
    max-width: 450px; /* Max width when centered */
    /* Smooth transition for max-width change */
    transition: max-width 0.5s ease-in-out;
    flex-shrink: 0; /* Prevent shrinking initially */
}

#main-content-area.detail-visible #player-list-container {
     /* Optionally reduce max-width when card is shown */
     /* max-width: 380px; */
     flex-shrink: 1; /* Allow shrinking if needed */
}


#player-detail-card-container {
    /* Start with zero width and invisible */
    width: 0;
    opacity: 0;
    overflow: hidden; /* Hide content during transition */
    flex-grow: 1; /* Allow it to grow */
    max-width: 600px; /* Limit maximum growth */
    /* Smooth transition for width and opacity */
    /* Opacity fades in slightly after width transition starts */
    transition: width 0.45s ease-in-out, opacity 0.3s ease-in-out 0.2s;
}

#main-content-area.detail-visible #player-detail-card-container {
    /* Expand width and fade in */
    width: auto; /* Let flexbox determine width based on flex-grow/max-width */
    opacity: 1;
}


#player-list-container h2 {
    text-align: center;
    color: var(--text-primary);
    margin-bottom: 1.5rem;
    font-weight: 500;
    font-size: 1.5rem;
}

/* --- Styles für die sortierte Liste --- */
.player-list-sorted {
    list-style: none;
    padding: 0;
    border: 1px solid var(--glass-border-color);
    border-radius: var(--border-radius);
    overflow: hidden;
    counter-reset: player-rank-counter;
    background-color: var(--card-bg-color);
    backdrop-filter: blur(var(--glass-blur));
    box-shadow: 0 4px 15px rgba(0,0,0,0.15);
}

.player-list-sorted li {
    background-color: transparent;
    margin-bottom: 0;
    border-bottom: 1px solid rgba(255, 255, 255, 0.08);
    padding: 0.8rem 1rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 1rem;
    cursor: pointer;
    transition: background-color 0.2s ease;
}
.player-list-sorted li:last-child { border-bottom: none; }

.player-list-sorted li:hover {
    background-color: rgba(255, 255, 255, 0.08);
}

.player-list-sorted li::before {
    content: counter(player-rank-counter);
    counter-increment: player-rank-counter;
    font-weight: bold;
    color: var(--text-secondary);
    min-width: 20px;
    text-align: right;
    margin-right: 0.5rem;
}

.player-list-sorted .player-info {
    display: flex; align-items: center; gap: 1rem; flex-grow: 1; overflow: hidden; /* Prevent info overflow */
}

.player-list-sorted img.avatar {
    width: 40px;
    height: 40px;
    border-radius: 4px; /* Slightly rounded corners */
    object-fit: cover;
    background-color: #444;
    border: 1px solid var(--glass-border-color);
    flex-shrink: 0;
}
.player-list-sorted .player-name {
    font-size: 1rem; font-weight: 500; color: var(--text-primary); text-decoration: none; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;
    /* Removed max-width here, let flexbox handle it */
}
.player-list-sorted .player-name:hover { color: var(--accent-orange); }
.player-list-sorted .player-elo {
    font-size: 1rem; font-weight: 700; color: var(--accent-orange); min-width: 45px; text-align: right; flex-shrink: 0;
}
.player-list-sorted li.error-item {
    justify-content: flex-start; background-color: rgba(239, 83, 80, 0.1); color: var(--bar-color-bad); font-style: italic; cursor: default;
}
.player-list-sorted li.error-item:hover { background-color: rgba(239, 83, 80, 0.15); }
.player-list-sorted li.error-item::before { color: var(--bar-color-bad); }


/* --- Styles für die Detail-Karte (HLTV/Glassmorphism) --- */
.player-card-hltv {
    background-color: var(--card-bg-color);
    backdrop-filter: blur(var(--glass-blur));
    border-radius: var(--border-radius);
    border: 1px solid var(--glass-border-color);
    padding: 1.5rem;
    box-shadow: 0 6px 20px rgba(0,0,0,0.2);
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    height: 100%; /* Try to match list height */
    box-sizing: border-box; /* Include padding in height */
}
.player-card-hltv .card-header {
    display: flex; align-items: center; justify-content: space-between; gap: 1rem; border-bottom: 1px solid var(--border-color); padding-bottom: 1rem;
}
.player-card-hltv .card-header .player-info { display: flex; align-items: center; gap: 1rem; }
.player-card-hltv .card-header img.avatar { width: 45px; height: 45px; border-radius: 4px; object-fit: cover; background-color: #444; border: 1px solid var(--glass-border-color); flex-shrink: 0; }
.player-card-hltv .card-header .player-name { font-size: 1.4rem; font-weight: 700; color: var(--text-primary); text-decoration: none; }
.player-card-hltv .card-header .player-name:hover { color: var(--accent-orange); }
.player-card-hltv .card-header .stats-label { font-size: 0.75rem; color: var(--text-secondary); text-transform: uppercase; letter-spacing: 1px; }

.player-card-hltv .stats-grid { display: grid; grid-template-columns: repeat(3, 1fr); gap: 1.5rem 1rem; }
.player-card-hltv .stat-item { text-align: center; }
.player-card-hltv .stat-item .label { font-size: 0.75rem; color: var(--text-secondary); margin-bottom: 0.25rem; text-transform: uppercase; letter-spacing: 0.5px; }
.player-card-hltv .stat-item .value { font-size: 1.6rem; font-weight: 700; color: var(--text-primary); margin-bottom: 0.5rem; }
.player-card-hltv .stat-item .value.na { font-size: 1.2rem; color: var(--text-secondary); }

.player-card-hltv .indicator-bar { height: 5px; background-color: var(--bar-background); border-radius: 3px; overflow: hidden; position: relative; margin-top: 0.25rem; }
.player-card-hltv .indicator-bar .bar-fill { height: 100%; width: 50%; background-color: var(--bar-color-okay); border-radius: 3px; position: absolute; left: 0; top: 0; transition: width 0.5s ease, background-color 0.5s ease; }


.player-card-hltv.error-card {
    justify-content: center; align-items: center; min-height: 150px; border-color: var(--bar-color-bad);
}
.player-card-hltv.error-card .card-header, .player-card-hltv.error-card .stats-grid { display: none; }
.player-card-hltv.error-card .error-message { color: #ffabab; font-style: italic; }


footer {
    text-align: center; padding: 1.5rem; margin-top: 2rem; font-size: 0.9rem; color: var(--text-secondary); background-color: rgba(var(--card-bg-color-rgb), 0.85); border-top: 1px solid var(--border-color); backdrop-filter: blur(var(--glass-blur));
}

/* Responsive Anpassungen */
@media (max-width: 768px) {
    main {
        padding: 1.5rem 0.5rem;
    }
    #main-content-area {
        /* Stack vertically on mobile */
        flex-direction: column;
        align-items: center;
        gap: 1.5rem;
        /* Reset justify-content for stacked layout */
        justify-content: flex-start;
    }
    #main-content-area.detail-visible {
        /* Keep vertical stacking */
        flex-direction: column;
        align-items: center;
        justify-content: flex-start;
    }

    #player-list-container,
    #main-content-area.detail-visible #player-list-container {
        max-width: 95%; /* Allow list to be wider */
        width: 100%;
        flex-shrink: 0; /* Don't shrink list on mobile */
    }

    #player-detail-card-container,
    #main-content-area.detail-visible #player-detail-card-container {
        /* Always take full width available */
        width: auto;
        max-width: 95%;
        opacity: 1; /* Ensure card is always visible when present */
        margin-top: 1.5rem; /* Add space when stacked */
        /* Reset transition properties if they interfere */
        /* transition: none; */
    }
    /* Hide the detail card initially on mobile if not detail-visible */
    #main-content-area:not(.detail-visible) #player-detail-card-container {
         width: 0;
         opacity: 0;
         margin-top: 0;
    }


    .player-card-hltv .stats-grid {
        grid-template-columns: repeat(2, 1fr);
        gap: 1rem;
    }
    .player-card-hltv .stat-item .value {
        font-size: 1.4rem;
    }
    .player-list-sorted .player-name {
        /* Max width adjusted automatically by flexbox */
    }
}

/* Adjustments for player grid (currently unused) */
#player-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 1rem;
    padding: 1rem;
}
